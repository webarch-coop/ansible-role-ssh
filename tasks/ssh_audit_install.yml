---
- name: Install ssh-audit
  block:

    - name: Install or upgrad ssh-audit
      block:

        - name: Check if pip3 is available
          ansible.builtin.command: which pip3
          check_mode: false
          changed_when: false
          register: ssh_which_pip3
          failed_when: ssh_which_pip3.rc is not regex('^0|1$')

        - name: Ensure that ssh-audit is not installed using pip3
          block:

            - name: Run pip3 show ssh-audit
              ansible.builtin.command: pip3 show ssh-audit --no-color
              check_mode: false
              changed_when: false
              register: ssh_pip3_show_ssh_audit
              failed_when: ssh_pip3_show_ssh_audit.rc is not regex('^0|1$')

            - name: Set a fact for the results of pip3 show ssh-audit
              ansible.builtin.set_fact:
                ssh_pip3_ssh_audit: "{{ ssh_pip3_show_ssh_audit.stdout | string | community.general.jc('ini') }}"

            - name: Debug the results of pip3 show ssh-audit
              ansible.builtin.debug:
                var: ssh_pip3_ssh_audit
                verbosity: 1

            - name: Uninstall pip3 ssh-audit
              ansible.builtin.pip:
                name: ssh-audit
                state: absent
              when:
                - ssh_pip3_show_ssh_audit.rc == 0
                - ssh_pip3_ssh_audit.Location is defined
                - ssh_pip3_ssh_audit.Location != "/usr/lib/python3/dist-packages"

          when:
            - ssh_which_pip3.rc == 0

        - name: Ensure that ssh-audit is present using a Debian package on Bookworm and Trixy
          block:

            - name: Local ssh-audit absent
              ansible.builtin.file:
                path: /usr/local/bin/ssh-audit
                state: absent

            - name: Install ssh-audit using the Debian package on Bookworm and Trixy
              ansible.builtin.apt:
                pkg:
                  - ssh-audit
                state: present

          when: ansible_distribution_release is regex('^bookworm|trixy$')

        - name: Install ssh-audit from source on Debian Bullseye and older
          block:

            - name: GPG public present
              ansible.builtin.copy:
                src: jtesta_2020-2025.asc
                dest: /root/jtesta_2020-2025.asc
                mode: 0600
                owner: root
                group: root

            - name: GPG present
              ansible.builtin.apt:
                pkg:
                  - gpg
                state: present

            - name: GPG key imported
              ansible.builtin.command: gpg --import /root/jtesta_2020-2025.asc
              register: ssh_audit_gpg_import
              changed_when: ("not changed" not in ssh_audit_gpg_import.stderr)

            - name: GPG signature for archive of ssh-audit source present
              ansible.builtin.get_url:
                url: "https://github.com/jtesta/ssh-audit/releases/download/v{{ ssh_audit_version_latest }}/ssh-audit-{{ ssh_audit_version_latest }}.tar.gz.sig"
                dest: "/usr/local/src/ssh-audit-{{ ssh_audit_version_latest }}.tar.gz.sig"
                mode: 0644
                owner: root
                group: root
              register: ssh_audit_sig_get_url

            - name: Archive of ssh-audit source present
              ansible.builtin.get_url:
                url: "https://github.com/jtesta/ssh-audit/releases/download/v{{ ssh_audit_version_latest }}/ssh-audit-{{ ssh_audit_version_latest }}.tar.gz"
                dest: "/usr/local/src/ssh-audit-{{ ssh_audit_version_latest }}.tar.gz"
                mode: 0644
                owner: root
                group: root
              register: ssh_audit_get_url

            - name: Verify and install ssh-audit when it has been downloaded
              block:

                - name: GPG signature verified
                  ansible.builtin.command: "gpg --verify --logger-fd 1 /usr/local/src/ssh-audit-{{ ssh_audit_version_latest }}.tar.gz.sig"
                  changed_when: false
                  register: ssh_audit_gpg_check
                  failed_when: ("Good signature" not in ssh_audit_gpg_check.stdout)

                - name: Archive of ssh-audit source unarchived
                  ansible.builtin.unarchive:
                    src: "/usr/local/src/ssh-audit-{{ ssh_audit_version_latest }}.tar.gz"
                    dest: "/usr/local/src"
                    creates: "ssh-audit-{{ ssh_audit_version_latest }}"
                    owner: root
                    group: root
                    remote_src: true
                  register: ssh_audit_unarchived

                - name: Check that ssh-audit works by running it with --help
                  ansible.builtin.command: "python3 /usr/local/src/ssh-audit-{{ ssh_audit_version_latest }}/ssh-audit.py --help"
                  changed_when: false
                  when: (ssh_audit_unarchived.failed is defined) and (not ssh_audit_unarchived.failed | bool)

                - name: Symlink to add ssh-audit to PATH environment present
                  ansible.builtin.file:
                    state: link
                    src: "/usr/local/src/ssh-audit-{{ ssh_audit_version_latest }}/ssh-audit.py"
                    dest: /usr/local/bin/ssh-audit
                    follow: false
                    mode: 0777
                    owner: root
                    group: root

              when:
                - (ssh_audit_sig_get_url.state is defined) and (ssh_audit_sig_get_url.state == "file")
                - (ssh_audit_get_url.state is defined) and (ssh_audit_get_url.state == "file")

          when: ansible_distribution_release is not regex('^bookworm|trixy$')

      when: (ssh_audit_installed_version is not defined) or (ssh_audit_installed_version is version(ssh_audit_version_latest, '<'))

  tags:
    - ssh
    - ssh_audit
...
