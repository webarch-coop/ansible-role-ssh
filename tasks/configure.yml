# Copyright 2019-2025 Chris Croome
#
# This file is part of the Webarchitects OpenSSH Ansible role.
#
# The Webarchitects OpenSSH Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects OpenSSH Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects OpenSSH Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Configure OpenSSH server
  block:

    - name: Run ssh-audit when the init system is systemd
      block:

        - name: Audit SSH and generate JSON output
          # ansible.builtin.command: "ssh-audit -j {{ ssh_localhost }}"
          ansible.builtin.shell: "ssh-audit -j {{ ssh_localhost }}"
          args:
            executable: "{{ ansible_local.bash.path }}"
          check_mode: false
          changed_when: false
          register: ssh_audit_json
          until: ssh_audit_json.rc == 1
          retries: 10
          delay: 2
          failed_when: ssh_audit_json.rc is not regex('0|2|3')

        - name: Set a fact for the SSH audit results
          ansible.builtin.set_fact:
            ssh_audit_results: "{{ ssh_audit_json.stdout | from_json }}"

        - name: Debug the SSH audit results
          ansible.builtin.debug:
            var: ssh_audit_results
            verbosity: "{% if ansible_check_mode | bool or ansible_diff_mode | bool %}0{% else %}1{% endif %}"

        - name: Set a fact for the version of OpenSSH installed
          ansible.builtin.set_fact:
            ssh_version: "{{ ssh_audit_results.banner.software | regex_replace('^OpenSSH_') | regex_replace('p[1-9]$') }}"

        - name: Ensure that ssh_version is defined and is a one or two digit number, a dot and a second one or two digit number
          ansible.builtin.assert:
            that:
              - ssh_version is defined
              - ssh_version is regex('^[0-9]{1,2}[.][0-9]{1,2}$')
            quiet: true

      when:
        - ssh_init is defined
        - ssh_init == "systemd"

    - name: Ensure that /run/sshd exists when init system is not systemd
      ansible.builtin.file:
        path: /run/sshd
        state: directory
        mode: "0755"
        owner: root
        group: root
      when: ssh_init != "systemd"

    - name: Test the SSH server configuration
      block:

        - name: Write the proposed config to a test file
          ansible.builtin.template:
            src: templates/sshd_config.j2
            dest: /etc/ssh/.sshd_config.ansible.test
            mode: "0600"
            owner: root
            group: root
            validate: /usr/sbin/sshd -t -dd -f %s
          register: ssh_config_test

      rescue:

        - name: Print standard error from the test of the proposed configuration
          ansible.builtin.debug:
            var: ssh_config_test.stderr

        - name: Fail because the generated test sshd_config does not validate
          ansible.builtin.fail:
            msg:
              - "The proposed new SSH configuration did not validate, see the errors above."
              - "The failed configuration has been written to /etc/ssh/.sshd_config.new"

    - name: Apply the SSH server configuration
      block:

        - name: SSHD configuration file sshd_config in place
          ansible.builtin.template:
            src: templates/sshd_config.j2
            dest: /etc/ssh/sshd_config
            mode: "0644"
            owner: root
            group: root
            validate: /usr/sbin/sshd -t -f %s
            backup: true
          register: ssh_config
          notify: Restart sshd

      rescue:

        - name: Non-valid sshd_config written to /etc/ssh/.sshd_config.broken
          ansible.builtin.template:
            src: templates/sshd_config.j2
            dest: /etc/ssh/.sshd_config.broken
            mode: "0600"
            owner: root
            group: root

        - name: Print standard error from the test of the proposed configuration
          ansible.builtin.debug:
            var: ssh_config.stderr

        - name: Fail because the generated sshd_config does not validate
          ansible.builtin.fail:
            msg:
              - "/etc/ssh/sshd_config has not been updated, a non-valid SSH server config has not been applied."
              - "The non-valid SSH server config has been written to /etc/ssh/.sshd_config.broken"

    - name: Flush handlers to restart SSH if the configuration has changed
      ansible.builtin.meta: flush_handlers
      when: (ssh_config is defined) and (ssh_config.changed | bool)

  tags:
    - ssh
...
