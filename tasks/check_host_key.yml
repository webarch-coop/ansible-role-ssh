# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects OpenSSH Ansible role.
#
# The Webarchitects OpenSSH Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects OpenSSH Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects OpenSSH Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Check OpenSSH host key
  block:

    - name: Check the bits required for SSH DSA keys
      ansible.builtin.assert:
        that:
          - ssh_host_key.bits is defined
          - ssh_host_key.bits == 1024
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: ssh_host_key.name == "dsa"

    - name: Check the bits required for SSH RSA keys
      ansible.builtin.assert:
        that:
          - ssh_host_key.bits is defined
          - ssh_host_key.bits >= 1024
          - ssh_host_key.bits <= 122880
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: ssh_host_key.name == "rsa"

    - name: Check the bit required for SSH ECDSA keys
      ansible.builtin.assert:
        that:
          - ssh_host_key.bits is defined
          - ( ssh_host_key.bits == 256 ) or ( ssh_host_key.bits == 384 ) or ( ssh_host_key.bits == 521 )
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: ssh_host_key.name == "ecdsa"

    - name: Bit should not be defined for ECDSA-SK, Ed25519 and Ed25519-SK SSH keys
      ansible.builtin.assert:
        that:
          - ssh_host_key.bits is not defined
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
      when: >-
        ( ssh_host_key.name == "ecdsa-sk" ) or
        ( ssh_host_key.name == "ed25519" ) or
        ( ssh_host_key.name == "ed25519-sk" )

    - name: Check if the SSH key is present
      ansible.builtin.stat:
        path: "{{ ssh_host_key.path }}"
      register: ssh_host_key_path

    - name: Debug the results of the host SSH key path check
      ansible.builtin.debug:
        var: ssh_host_key_path
        verbosity: 2

    - name: Run additional checks when the host key exists
      block:

        - name: Check the host SSH keys attributes
          ansible.builtin.assert:
            that:
              - ssh_host_key_path.stat.isreg | bool
              - ssh_host_key_path.stat.mode == "0600"
              - ssh_host_key_path.stat.gid == 0
              - ssh_host_key_path.stat.gr_name == "root"
              - ssh_host_key_path.stat.uid == 0
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"

        - name: Check host SSH key fingerprint
          ansible.builtin.command: "ssh-keygen -l -f {{ ssh_host_key.path }}"
          check_mode: false
          changed_when: false
          register: ssh_host_key_gen_fingerprint

        - name: Set a fact for the SSH key fingerprint results
          ansible.builtin.set_fact:
            ssh_host_key_fingerprint: "{{ ssh_host_key_gen_fingerprint.stdout | split(' ') | list }}"

        - name: "Debug the SSH key fingerprint results for {{ ssh_host_key.path }}"
          ansible.builtin.debug:
            var: ssh_host_key_fingerprint
            verbosity: 2

        - name: RSA key need to be regenerated
          ansible.builtin.debug:
            msg: "The RSA key is currently {{ ssh_host_key_fingerprint[0] }} bits but {{ ssh_host_key.bits }} bits are required so it will be regenerated."
          when:
            - ssh_host_key.name == "rsa"
            - ssh_host_key_fingerprint[0] | int != ssh_host_key.bits

      when: ssh_host_key_path.stat.exists | bool

  tags:
    - ssh
    - ssh_audit
    - ssh_check
...
