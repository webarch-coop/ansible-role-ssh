---
- name: OpenSSH local configuration
  block:

    - name: Debug variables
      ansible.builtin.debug:
        msg:
          - "ssh_local_hosts_directory{% if ssh_local_hosts_directory is defined %} {{ ssh_local_hosts_directory }}{% endif %}"
          - "ssh_local_hosts_file{% if ssh_local_hosts_file is defined %} {{ ssh_local_hosts_file }}{% endif %}"
          - "ssh_local_hosts_host{% if ssh_local_hosts_host is defined %} {{ ssh_local_hosts_host }}{% endif %}"
          - "ssh_local_hosts_hostname{% if ssh_local_hosts_hostname is defined %} {{ ssh_local_hosts_hostname }}{% endif %}"
          - "ssh_local_hosts_user_known_hosts_file{% if ssh_local_hosts_user_known_hosts_file is defined %} {{ ssh_local_hosts_user_known_hosts_file }}{% endif %}"
          - "ssh_local_hosts_port{% if ssh_local_hosts_port is defined %} {{ ssh_local_hosts_port }}{% endif %}"
          - "ssh_local_hosts_readme{% if ssh_local_hosts_readme is defined %} {{ ssh_local_hosts_readme }}{% endif %}"
        verbosity: 1

    - name: Audit SSH and generate JSON output
      ansible.builtin.command: ssh-audit -j localhost
      check_mode: false
      changed_when: false
      register: ssh_audit_json
      failed_when: ssh_audit_json.rc is not regex('0|2|3')

    - name: Set a fact for the SSH audit results
      ansible.builtin.set_fact:
        ssh_audit: "{{ ssh_audit_json.stdout | from_json }}"

    - name: Scan SSH keys for local UserKnownHostsFile
      ansible.builtin.include_tasks: scan_key_address.yml
      loop: "{{ ssh_scan_ip_addresses }}"
      loop_control:
        loop_var: ip
      when:
        - (ssh_scan_keys is defined) and (ssh_scan_keys | bool)
        - (ssh_scan_ip_addresses is defined) and (ssh_scan_ip_addresses[0] is defined)

    - name: Local Host files
      block:

        - name: Local Host directory present
          ansible.builtin.file:
            path: "{{ ssh_local_hosts_directory }}"
            state: directory
            mode: 0700
          register: ssh_local_hosts_dir

        - name: First line in local Host file present
          ansible.builtin.lineinfile:
            path: "{{ ssh_local_hosts_file }}"
            line: "# Ansible managed"
            state: present
            insertbefore: BOF
            create: true
            mode: 0600
          when: (ssh_local_hosts_dir.state is defined) and (ssh_local_hosts_dir.state == "directory")

        - name: Debug local directory for Host file
          ansible.builtin.debug:
            var: ssh_local_hosts_directory
            verbosity: 2
          when: ssh_local_hosts_directory is defined

        - name: Debug path to the local Host file
          ansible.builtin.debug:
            var: ssh_local_hosts_file
            verbosity: 2
          when: ssh_local_hosts_file is defined

        - name: Debug Host to use in the local Host file
          ansible.builtin.debug:
            var: ssh_local_hosts_host
            verbosity: 2
          when: ssh_local_hosts_host is defined

        - name: Debug Hostname to use in the local Host file
          ansible.builtin.debug:
            var: ssh_local_hosts_hostname
            verbosity: 2
          when: ssh_local_hosts_hostname is defined

        - name: Debug UserKnownHostsFile to use in the local Host file
          ansible.builtin.debug:
            var: ssh_local_hosts_user_known_hosts_file
            verbosity: 2
          when: ssh_local_hosts_user_known_hosts_file is defined

        - name: Debug Port to use in the local Host file
          ansible.builtin.debug:
            var: ssh_local_hosts_port
            verbosity: 2
          when: ssh_local_hosts_port is defined

        - name: Host present in the local Host file
          ansible.builtin.blockinfile:
            path: "{{ ssh_local_hosts_file }}"
            marker: "# {mark} {{ ssh_local_hosts_hostname }}"
            block: |
              {% if ssh_local_hosts_host is defined %}
              Host {{ ssh_local_hosts_host }}
              {% if ssh_local_hosts_hostname is defined %}
                Hostname {{ ssh_local_hosts_hostname }}
              {% endif %}
              {% if ssh_local_hosts_port is defined %}
                Port {{ ssh_local_hosts_port }}
              {% endif %}
              {% if ssh_local_hosts_user_known_hosts_file is defined %}
              {% if ssh_local_hosts_hostname | ansible.utils.ipaddr == ssh_local_hosts_hostname %}
                CheckHostIP yes
              {% endif %}
                HashKnownHosts no
                UserKnownHostsFile {{ ssh_local_hosts_user_known_hosts_file }}
              {% endif %}
              {% endif %}
            insertafter: "^# Ansible managed$"
            create: true
            mode: 0600
          when: (ssh_local_hosts_dir.state is defined) and (ssh_local_hosts_dir.state == "directory")

        - name: Last line in local Host file present
          ansible.builtin.lineinfile:
            path: "{{ ssh_local_hosts_file }}"
            line: "# vim: syntax=sshconfig"
            state: present
            insertafter: EOF
            create: true
            mode: 0600
          when: (ssh_local_hosts_dir.state is defined) and (ssh_local_hosts_dir.state == "directory")

        - name: Local README.md present
          ansible.builtin.blockinfile:
            path: "{{ ssh_local_hosts_readme }}"
            marker: "<!-- {mark} {{ ssh_local_hosts_hostname }} -->"
            block: "{{ ssh_local_hosts_readme_host }}"
            insertafter: EOF
            create: true
            mode: 0600
          when:
            - ssh_local_hosts_readme is defined
            - (ssh_local_hosts_dir.state is defined) and (ssh_local_hosts_dir.state == "directory")

      become: false
      delegate_to: localhost
      when:
        - ssh_local_hosts_directory is defined
        - ssh_local_hosts_file is defined
        - ssh_local_hosts_hostname is defined
        - ssh_local_hosts_port

  tags:
    - ssh
    - ssh_local_hosts
...
