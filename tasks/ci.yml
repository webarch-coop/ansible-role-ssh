# Copyright 2019-2024 Chris Croome
#
# This file is part of the Webarchitects OpenSSH Ansible role.
#
# The Webarchitects OpenSSH Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects OpenSSH Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects OpenSSH Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: SSH CI tasks
  block:

    - name: Directories present for CI key pairs
      ansible.builtin.file:
        path: "{{ ssh_dir }}"
        state: directory
        mode: "0700"
        owner: root
        group: root
      loop:
        - /root/.ssh/ci
        - /root/.ssh/authorized_keys.d
      loop_control:
        loop_var: ssh_dir

    - name: SSH CI key pair present
      community.crypto.openssh_keypair:
        path: /root/.ssh/ci/id_ecdsa
        type: ecdsa
        comment: "Ansible managed SSH CI public key"
        state: present
        mode: "0600"
        owner: root
        group: root

    - name: Slurp the CI public key
      ansible.builtin.slurp:
        src: "/root/.ssh/ci/id_ecdsa.pub"
      register: ssh_ci_pubkey_b64encoded

    - name: Public SSH CI key written to ~/.ssh/authorized_keys.d/authorized_keys_ci
      ansible.posix.authorized_key:
        user: root
        state: present
        path: /root/.ssh/authorized_keys.d/authorized_keys_ci
        key: "{{ ssh_ci_pubkey_b64encoded['content'] | b64decode | trim }}"
        key_options: 'from="{% for ip in ssh_ci_ips %}{{ ip }}{% if not loop.last %} {% endif %}"{% endfor %}"'

    - name: Assemble SSH public keys
      ansible.builtin.assemble:
        src: /root/.ssh/authorized_keys.d
        dest: /root/.ssh/authorized_keys
        mode: "0600"
        owner: root
        group: root
        remote_src: true
        validate: ssh-keygen -lf %s

    - name: Run which bash
      ansible.builtin.command: which bash
      check_mode: false
      changed_when: false
      register: which_bash
      failed_when: which_bash.stdout is not regex('\/bash$')

    - name: Set a variable for the path to Bash
      ansible.builtin.set_fact:
        bash: "{{ which_bash.stdout }}"

    - name: "Generate a known_hosts file for {{ inventory_hostname }}"
      ansible.builtin.shell: |
        set -e -o pipefail
        ssh-keyscan -t ecdsa -H {{ inventory_hostname }} > /root/.ssh/ci/known_hosts
      args:
        executable: "{{ bash }}"
        creates: /root/.ssh/ci/known_hosts

  tags:
    - ssh
...
