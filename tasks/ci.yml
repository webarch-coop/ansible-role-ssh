---
- name: Directories present for CI key pairs
  file:
    path: "{{ dir }}"
    state: directory
    mode: 0700
    owner: root
    group: root
  loop:
    - /root/.ssh/ci
    - /root/.ssh/authorized_keys.d
  loop_control:
    loop_var: dir
  tags:
    - ssh

- name: SSH CI key pair present
  command: 'ssh-keygen -t ecdsa -f ecdsa -C "Ansible generated CI key" -q -N ""'
  args:
    chdir: /root/.ssh/ci
    creates: "/root/.ssh/ci/ecdsa"
  tags:
    - ssh
    
- name: Slurp the CI public key
  slurp:
    src: "/root/.ssh/ci/ecdsa.pub"
  register: ssh_ci_pubkey_b64encoded
  tags:
    - ssh

- name: Public SSH CI key written to ~/.ssh/authorized_keys.d/authorized_keys_ci
  authorized_key:
    user: root
    state: present
    path: /root/.ssh/authorized_keys.d/authorized_keys_ci
    key: "{{ ssh_ci_pubkey_b64encoded['content'] | b64decode }}" 
    key_options: 'from="{% for ip in ssh_ci_ips %}{{ ip }}{{ " " if not loop.last else "" }}"{% endfor %}"'
  tags:
    - ssh

- name: Assemble SSH public keys
  assemble:
    src: /root/.ssh/authorized_keys.d
    dest: /root/.ssh/authorized_keys
    remote_src: true
    validate: ssh-keygen -lf %s
  tags:
    - ssh

- name: "Generate a known_hosts file for localhost"
  shell: "ssh-keyscan -t ecdsa -H localhost > /root/.ssh/ci/known_hosts"
  args:
    creates: /root/.ssh/ci/known_hosts
  tags:
    - ssh
...
