---
- name: Groups on the server
  shell: "getent group | awk -F: '{ print $1 }'"
  register: ssh_getent_group
  changed_when: false

- name: Variable set for groups
  set_fact:
    ssh_groups: "{{ ssh_getent_group.stdout_lines }}"

- name: Stat SSH root ECDSA public key
  stat:
    path: /root/.ssh/id_ed25519
  register: ssh_ecdsa_pubkey

- name: Generating SSH ECDSA keypair
  command: ssh-keygen -q -t ed25519 -f /root/.ssh/id_ed25519 -q -N "" -C "root@{{ ansible_hostname }}"
  when: ssh_ecdsa_pubkey.stat.exists == False

- name: Stat SSH root RSA public key
  stat:
    path: /root/.ssh/id_rsa
  register: ssh_rsa_pubkey

- name: Generating SSH RSA keypair
  command: ssh-keygen -q -t rsa -b 4096 -f /root/.ssh/id_rsa -q -N "" -C "root@{{ ansible_hostname }}"
  when: ssh_rsa_pubkey.stat.exists == False

- name: Update sshd_config, test it, restat if test passes and restore previous config if not

  block:

    - name: sshd_config in place
      template:
        src: templates/sshd_config.j2
        dest: /etc/ssh/sshd_config
        backup: true
      register: ssh_config

    # If this fails the rescue tasks are executed
    - name: sshd_config tested
      command: sshd -t
      register: ssh_test
      changed_when: false

    - name: Restart SSH if configtest passed and ssh_config has changed
      service:
        name: ssh
        state: restarted
      when: ssh_config.changed

  rescue:

    - name: Last sshd_config backup
      shell: ls -tr /etc/ssh/sshd_config.* | tail -n1
      register: ssh_config_backup

    - name: sshd_config backup restored
      command: "cp {{ ssh_config_backup.stdout }} /etc/ssh/sshd_config"

    - debug:
        msg: "Previous sshd_config restored due to errors with update: {{ ssh_test.stderr }}"
