---
- name: Configure OpenSSH server
  block:

    - name: Debug variables
      debug:
        msg:
          - "ssh_host_keys:{% for key in ssh_host_keys %} {{ key }}{% endfor %}"
          - "ssh_kex_algorithms: {{ ssh_kex_algorithms }}"
          - "ssh_ciphers: {{ ssh_ciphers }}"
          - "ssh_macs: {{ ssh_macs }}"
          - "ssh_permit_root_login: {{ ssh_permit_root_login }}"
          - "ssh_permit_root_login type: {{ ssh_permit_root_login | type_debug }}"
          - "ssh_deny_users:{% if ssh_deny_users is defined %}{% for u in ssh_deny_users %} {{ u }}{% endfor %}{% endif %}"
          - "ssh_allow_groups:{% if ssh_allow_groups is defined %}{% for g in ssh_allow_groups %} {{ g }}{% endfor %}{% endif %}"
          - "ssh_authentication_methods: {{ ssh_authentication_methods }}"
          - "ssh_password_authentication: {{ ssh_password_authentication }}"
          - "ssh_pubkey_authentication: {{ ssh_pubkey_authentication }}"
          - "ssh_allow_agent_forwarding: {{ ssh_allow_agent_forwarding }}"
          - "ssh_allow_tcp_forwarding: {{ ssh_allow_tcp_forwarding }}"
          - "ssh_chroot_users_dir:{% if ssh_chroot_users_dir is defined %} {{ ssh_chroot_users_dir }}{% endif %}"
          - "ssh_kex_algorithms: {% if ssh_kex_algorithms | type_debug == 'list' %}{% for k in ssh_kex_algorithms %}{{ k }}{{ ',' if not loop.last else '' }}{% endfor %}{% else %}{{ ssh_kex_algorithms }}{% endif %}"
          - "ssh_ciphers: {% if ssh_ciphers | type_debug == 'list' %}{% for c in ssh_ciphers %}{{ c }}{{ ',' if not loop.last else '' }}{% endfor %}{% else %}{{ ssh_ciphers }}{% endif %}"
          - "ssh_macs: {% if ssh_macs | type_debug == 'list' %}{% for m in ssh_macs %}{{ m }}{{ ',' if not loop.last else '' }}{% endfor %}{% else %}{{ ssh_macs }}{% endif %}"
        verbosity: 2

    - name: Check variables
      assert:
        that:
          - ( ssh_authentication_methods == "publickey" ) or ( ssh_authentication_methods | type_debug == "bool" )
          - ssh_password_authentication | type_debug == "bool"
          - ssh_pubkey_authentication | type_debug == "bool"
          - ssh_allow_agent_forwarding | type_debug == "bool"
          - ssh_allow_tcp_forwarding | type_debug == "bool"
          - ssh_kex_algorithms | type_debug == "list"
          - ssh_ciphers | type_debug == "list"
          - ssh_macs | type_debug == "list"
        fail_msg: "Please check your variables, some which were previously strings are now expected to be booleans"

    - name: Check ssh_allow_groups variable
      assert:
        that:
          - ssh_allow_groups | type_debug == "list"
      when: ssh_allow_groups is defined

    - name: Check ssh_deny_users variable
      assert:
        that:
          - ssh_deny_users | type_debug == "list"
      when: ssh_deny_users is defined

    - name: "Check that {{ ssh_chroot_users_dir }} is a directory when it is defined"
      stat:
        path: "{{ ssh_chroot_users_dir }}"
      register: ssh_chroot_users_dir_check
      when: ssh_chroot_users_dir is defined

    - name: Debug ssh_chroot_users_dir_check when defined
      debug:
        var: ssh_chroot_users_dir_check
      when: ssh_chroot_users_dir_check is defined

    - name: Ensure that ssh_chroot_users_dir exists when defined
      assert:
        that:
          - ssh_chroot_users_dir_check.stat.exists
          - ssh_chroot_users_dir_check.stat.isdir
      when: ssh_chroot_users_dir_check is defined

    - name: Update apt cache
      apt:
        update_cache: true

    - name: Use OpenSSH from buster-backports when available
      block:

        - name: OpenSSH server present from buster-backports
          apt:
            pkg:
              - openssh-client
              - openssh-server
              - openssh-sftp-server
            state: present
            default_release: buster-backports
            install_recommends: true

      when: ansible_distribution_release == "buster"

    - name: SSH packages present
      apt:
        pkg:
          - libc-bin
          - openssh-client
          - openssh-server
          - openssh-sftp-server
          - ssh-import-id
        state: present

    - name: SSH allow groups present
      group:
        name: "{{ ssh_allow_group }}"
        state: present
      loop: "{{ ssh_allow_groups }}"
      loop_control:
        loop_var: ssh_allow_group
      when: ( ssh_allow_groups is defined ) and ( ssh_allow_groups != [] )

    - name: SSH ECDSA keypair for root present
      openssh_keypair:
        path: /root/.ssh/id_ed25519
        type: ed25519
        comment: "root@{{ inventory_hostname }}"
        state: present
        mode: "0600"
        owner: root
        group: root

    - name: Include SSH key pair generation for CI
      include_tasks: ci.yml
      when: ( ssh_ci_ips is defined ) and ( ssh_ci_ips != [] )

    - name: Remove Diffie-Hellman moduli which are less than 4000 bits
      lineinfile:
        path: /etc/ssh/moduli
        regexp: '^[0-9]{14}\ 2\ 6\ 100\ [1|2|3][0-9]{3}\ .*$'
        state: absent
        mode: "0644"
        owner: root
        group: root
      notify: restart ssh

    - name: Check and conditional apply the SSH server configuration
      block:

        - name: sshd_config in place
          template:
            src: templates/sshd_config.j2
            dest: /etc/ssh/sshd_config
            mode: "0644"
            owner: root
            group: root
            validate: sshd -t -f %s
            backup: true
          notify: restart ssh

      rescue:

        - name: Non-valid sshd_config written to /etc/ssh/.sshd_config.broken
          template:
            src: templates/sshd_config.j2
            dest: /etc/ssh/.sshd_config.broken
            mode: "0600"
            owner: root
            group: root

        - name: Fail because the generated sshd_config does not validate
          fail:
            msg:
              - "/etc/ssh/sshd_config has not been updated, a non-valid SSH server config has not been applied."
              - "The non-valid SSH server config has been written to /etc/ssh/.sshd_config.broken"

    - name: Loop through the SSH host keys
      include_tasks: host_key.yml
      loop: "{{ ssh_host_keys }}"
      loop_control:
        loop_var: ssh_host_key_path

  tags:
    - ssh
...
