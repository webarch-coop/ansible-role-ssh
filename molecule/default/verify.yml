# Copyright 2019-2023 Chris Croome
#
# This file is part of the Webarchitects OpenSSH Ansible role.
#
# The Webarchitects OpenSSH Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects OpenSSH Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects OpenSSH Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Verify as root
  become: true
  connection: local
  gather_facts: true
  hosts:
    - localhost
  tasks:

    - name: Run which ssh
      ansible.builtin.command: which ssh
      check_mode: false
      changed_when: false
      register: molecule_which_ssh

    - name: Debug which ssh
      ansible.builtin.debug:
        var: molecule_which_ssh.stdout

    - name: Check ssh -V
      ansible.builtin.command: ssh -V
      check_mode: false
      changed_when: false
      register: molecule_ssh_v

    - name: Debug ssh version
      ansible.builtin.debug:
        var: molecule_ssh_v.stderr

    - name: Check the runing services
      ansible.builtin.service_facts:
      register: molecule_service_facts

    - name: Debug ssh service status
      ansible.builtin.debug:
        msg: "{{ molecule_service_facts | community.general.json_query(molecule_service_jpq) }}"
        verbosity: 3
      vars:
        molecule_service_jpq: 'ansible_facts.services.["ssh.service"]|[0]'

    - name: Check that sshd is enabled and running
      ansible.builtin.assert:
        that:
          - (molecule_service_facts | community.general.json_query(molecule_service_jpq)).status == "enabled"
          - (molecule_service_facts | community.general.json_query(molecule_service_jpq)).state == "running"
        quiet: true
      vars:
        molecule_service_jpq: 'ansible_facts.services.["ssh.service"]|[0]'

    - name: Gather facts on listening ports
      community.general.listen_ports_facts:

    - name: Debug TCP ports
      ansible.builtin.debug:
        var: ansible_facts.tcp_listen
        verbosity: 2

    - name: Set a fact for the port that SSH is listening on
      ansible.builtin.set_fact:
        molecule_ssh_listening: "{{ ansible_facts.tcp_listen | community.general.json_query(molecule_ssh_listen_jpq) }}"
      vars:
        molecule_ssh_listen_jpq: "[?name=='sshd'].address"

    - name: Debug SSH listening ports
      ansible.builtin.debug:
        var: molecule_ssh_listening

    - name: Audit SSH and generate JSON output
      ansible.builtin.command: "ssh-audit -j {{ ansible_default_ipv4.address }}"
      check_mode: false
      changed_when: false
      register: molecule_ssh_audit_json
      failed_when: molecule_ssh_audit_json.rc is not regex('0|2|3')

    - name: Set a fact for the SSH audit results
      ansible.builtin.set_fact:
        molecule_ssh_audit_results: "{{ molecule_ssh_audit_json.stdout | from_json }}"

    - name: Debug the SSH audit results
      ansible.builtin.debug:
        var: molecule_ssh_audit_results
...
